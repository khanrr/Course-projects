67
x
x <- 67
x <- "howdy"
c(2,3,4)
x <- c(2,3,4)
x <- c("a", "hi", "4")
x <- 4:8
barplot(count)
print(c("The mean is ", exam_mean[exam_num], " The median is ", exam_median[exam_num]))
scores <- c(1,2,4,5)
mad(scores)
scores <- c(0,-6,10,5,8,2,-12,11,-2)
summary(scores)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
std <- values.sd
values.sd <- sd(values)
values.mean <- mean(values)
values.sd <- sd(values)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score that can be ignored
gps <- values.mean + values.sd
lps <- values.mean - values.sd
lps1 <- values.mean - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps1 <- values.mean + values.sd
lps1 <- values.mean - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps1 <- values.mean + values.sd
lps1 <- values.mean - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps1 <- values.mean + values.sd
lps1 <- values.mean - values.sd
#Find the greatest possible score and lowest possible score within two standard deviations that can be ignored
gps2 <- values.mean + 2(values.sd)
lps2 <- values.mean - 2(values.sd)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps1 <- values.mean + values.sd
lps1 <- values.mean - values.sd
#Find the greatest possible score and lowest possible score within two standard deviations that can be ignored
gps2 <- values.mean + values.sd + values.sd
lps2 <- values.mean - values.sd - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps <- values.mean + values.sd
lps <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
gpp <- values.mean + values.sd + values.sd
lpp <- values.mean - values.sd - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
gps <- values.mean + values.sd
lps <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
gpp <- values.mean + values.sd + values.sd
lpp <- values.mean - values.sd - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Find lower and upper limit within 90% of scores
qnorm(0.90, mean = values.mean, sd = values.sd)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Find lower and upper limit within 90% of scores
qnorm(0.90, mean = values.mean, sd = values.sd, lower.tail = TRUE)
pnorm(0.90, mean = values.mean, sd = values.sd, lower.tail = FALSE)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Find lower and upper limit within 90% of scores
upper_area <- qnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = TRUE)
lower_area <- pnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = FALSE)
lower_limit <- values.mean - lower_area
upper_limit <- values.mean - upper_area
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Find lower and upper limit within 90% of scores
upper_area <- qnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = TRUE)
lower_area <- pnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = FALSE)
lower_limit <- values.mean - lower_area
upper_limit <- values.mean + upper_area
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + values.sd + values.sd
lowest_price_monitored <- values.mean - values.sd - values.sd
#Find lower and upper limit within 90% of scores
#Find lower and upper limit within 90% of scores
#upper_area <- qnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = TRUE)
#lower_area <- pnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = FALSE)
#lower_limit <- values.mean - lower_area
#upper_limit <- values.mean + upper_area
qnorm(0.90)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + 2*values.sd
lowest_price_monitored <- values.mean - 2*values.sd
#Find the probability that the firm will close above $60
pnorm(60, values.mean, values.sd, lower.tail = FALSE)
#Find the probability that Firm B will fall below $1.50
pnorm(1.50, mean = 2.53, sd = 0.50, lower.tail = TRUE)
#Find lower and upper limit within 90% of scores
#upper_area <- qnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = TRUE)
#lower_area <- pnorm(0.4500, mean = values.mean, sd = values.sd, lower.tail = FALSE)
#lower_limit <- values.mean - lower_area
#upper_limit <- values.mean + upper_area
quantile(values)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + 2*values.sd
lowest_price_monitored <- values.mean - 2*values.sd
#Find lower and upper limit within 90% of scores
z_star = qnorm(0.90)
#Find the probability that the firm will close above $60
pnorm(60, values.mean, values.sd, lower.tail = FALSE)
#Find the probability that Firm B will fall below $1.50
pnorm(1.50, mean = 2.53, sd = 0.50, lower.tail = TRUE)
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + 2*values.sd
lowest_price_monitored <- values.mean - 2*values.sd
#Find lower and upper limit within 90% of scores
z_star = pnorm(0.90)
#Find the probability that the firm will close above $60
pnorm(60, values.mean, values.sd, lower.tail = FALSE)
#Find the probability that Firm B will fall below $1.50
pnorm(1.50, mean = 2.53, sd = 0.50, lower.tail = TRUE)
#Find lower and upper limit within 90% of scores
z_star <- 1.645
#Create dataframe with values
values <- c(18.08, 17.50, 19.90, 31.40, 40.10, 35.60, 39.60, 39.00, 40.30)
#Find the mean and standard deviation
values.mean <- mean(values)
values.sd <- sd(values)
#Find the greatest possible score and lowest possible score within one standard deviation that can be ignored
greatest_score_ignored <- values.mean + values.sd
lowest_score_ignored <- values.mean - values.sd
#Find the greatest possible score and lowest possible price within two standard deviations that will be monitored
greatest_price_monitored <- values.mean + 2*values.sd
lowest_price_monitored <- values.mean - 2*values.sd
#Find lower and upper limit within 90% of scores
z_star <- 1.645
margin_of_error <- z_star*(values.sd/sqrt(9))
upper_limit <- values.mean + margin_of_error
lower_limit <- values.mean - margin_of_error
#Find the probability that the firm will close above $60
pnorm(60, values.mean, values.sd, lower.tail = FALSE)
#Find the probability that Firm B will fall below $1.50
pnorm(1.50, mean = 2.53, sd = 0.50, lower.tail = TRUE)
